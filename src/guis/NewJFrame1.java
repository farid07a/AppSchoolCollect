/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package guis;

import domaine.CategoreNiveau;
import domaine.Etudiant;
import domaine.Inscription;
import domaine.Matiere;
import domaine.NiveauEtude;
import domaine.Payement;
import domaine.Seance;
import domaine.Seance_Matiere;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.temporal.TemporalAdjusters;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import main.java.com.school.impl.CategoreNiveauDAOImpl;
import main.java.com.school.impl.EnseignantDAOImpl;
import main.java.com.school.impl.EtudiantDAOImpl;
import main.java.com.school.impl.InscriptionDAOImpl;
import main.java.com.school.impl.MatiereDAOImpl;
import main.java.com.school.impl.NiveauEtudeDAOImpl;
import main.java.com.school.impl.PayementDAOImpl;
import main.java.com.school.impl.SeanceDAOImpl;
import main.java.com.school.impl.SeanceMatiereDAOImpl;
import main.java.com.school.model.config.ConnectionDB;
import main.java.com.school.model.config.DatabaseConnectionException;
import material.design.ScrollBar;
import ui.table.TableCustom;

/**
 *
 * @author client
 */
public class NewJFrame1 extends javax.swing.JFrame {

    home home;
    Connection connection;
    CategoreNiveauDAOImpl categoreNiveauDAOImpl;
    NiveauEtudeDAOImpl niveauEtudeDAOImpl;
    MatiereDAOImpl matiereDAOImpl;
    EnseignantDAOImpl enseignantDAOImpl;
    InscriptionDAOImpl inscriptionDAOImpl;
    EtudiantDAOImpl etudiantDAOImpl;
    SeanceMatiereDAOImpl seanceMatiereDAOImpl;
    SeanceDAOImpl sceanceDAOImpl;
    PayementDAOImpl payementDAOImpl;
    List<Seance_Matiere> seance_Matieres_payee = new ArrayList<>();
    List<Payement> payements = new ArrayList<>();
    Etudiant etudiant;

    public NewJFrame1() {
        initComponents();

        try {
            connection = new ConnectionDB().getConnection();
        } catch (DatabaseConnectionException ex) {
            Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
        }
        etudiantDAOImpl = new EtudiantDAOImpl(connection);
        categoreNiveauDAOImpl = new CategoreNiveauDAOImpl(connection);
        niveauEtudeDAOImpl = new NiveauEtudeDAOImpl(connection);
        matiereDAOImpl = new MatiereDAOImpl(connection);
        enseignantDAOImpl = new EnseignantDAOImpl(connection);
        inscriptionDAOImpl = new InscriptionDAOImpl(connection);
        seanceMatiereDAOImpl = new SeanceMatiereDAOImpl(connection);
        payementDAOImpl = new PayementDAOImpl(connection);
        sceanceDAOImpl = new SeanceDAOImpl(connection);

        setLocationRelativeTo(this);
        setDesignTable(jTable1, jScrollPane1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        textAreaScroll1 = new material.design.TextAreaScroll();
        textArea1 = new material.design.TextArea();
        jCheckBoxCustomfr1 = new material.design.JCheckBoxCustomfr();
        buttonRounder19 = new material.design.buttonRounder();
        buttonRounder17 = new material.design.buttonRounder();
        lab_prenom = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lab_nom = new javax.swing.JLabel();
        lab_id_categ = new javax.swing.JLabel();
        lab_id_niv = new javax.swing.JLabel();
        lab_catego = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        combobox1 = new material.design.Combobox();
        jLabel9 = new javax.swing.JLabel();
        lab_niveau = new javax.swing.JLabel();
        la_montant_matier = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lab_nb_seance = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lab_prix_seance = new javax.swing.JLabel();
        tableScrollButton1 = new ui.table.TableScrollButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        lab_nbr_seance_no_payee = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        rad_moin = new javax.swing.JRadioButton();
        rad_seance = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 60, 425, 39));

        jLabel2.setText("Matriccule");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 70, -1, 25));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 294, 39));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("الدفع الشهري ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 6, 171, 46));

        jLabel3.setText("BarCode");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, -1, 25));

        jButton2.setText("payment");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, -1, -1));

        textArea1.setEditable(false);
        textArea1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        textArea1.setColumns(20);
        textArea1.setRows(5);
        textArea1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        textAreaScroll1.setViewportView(textArea1);

        jPanel1.add(textAreaScroll1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 420, 223, 97));

        jCheckBoxCustomfr1.setBackground(new java.awt.Color(0, 255, 0));
        jCheckBoxCustomfr1.setText("تأكيد الدفع");
        jCheckBoxCustomfr1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel1.add(jCheckBoxCustomfr1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 126, 37));

        buttonRounder19.setBackground(new java.awt.Color(51, 153, 255));
        buttonRounder19.setForeground(new java.awt.Color(255, 255, 255));
        buttonRounder19.setText("حفظ");
        buttonRounder19.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        buttonRounder19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRounder19ActionPerformed(evt);
            }
        });
        jPanel1.add(buttonRounder19, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 590, 93, -1));

        buttonRounder17.setBackground(new java.awt.Color(189, 189, 189));
        buttonRounder17.setForeground(new java.awt.Color(255, 255, 255));
        buttonRounder17.setText("إلغاء");
        buttonRounder17.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        buttonRounder17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRounder17ActionPerformed(evt);
            }
        });
        jPanel1.add(buttonRounder17, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 590, 94, -1));

        lab_prenom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jPanel1.add(lab_prenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 110, 156, 25));

        jLabel5.setText("اللقب");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 120, 38, 24));

        jLabel4.setText("الاسم");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 120, 38, -1));

        lab_nom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jPanel1.add(lab_nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 110, 156, 28));

        lab_id_categ.setText("id level");
        jPanel1.add(lab_id_categ, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 120, -1, -1));

        lab_id_niv.setText("id_class");
        jPanel1.add(lab_id_niv, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, -1, 21));

        lab_catego.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lab_catego.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lab_catego.setText("المستوى");
        lab_catego.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel1.add(lab_catego, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 160, 148, 27));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel6.setText("المستوى");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 160, -1, -1));

        combobox1.setLabeText("المادة");
        combobox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobox1ItemStateChanged(evt);
            }
        });
        combobox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox1ActionPerformed(evt);
            }
        });
        jPanel1.add(combobox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 190, 209, 53));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel9.setText("القسم");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 160, 41, 27));

        lab_niveau.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lab_niveau.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lab_niveau.setText("القسم");
        lab_niveau.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel1.add(lab_niveau, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 160, 156, 27));

        la_montant_matier.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        la_montant_matier.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        la_montant_matier.setText("prix");
        la_montant_matier.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(la_montant_matier, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 200, 142, 48));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("التوقيت :");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 543, 55, 21));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("عدد الحصص لهذا الشهر");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(864, 261, -1, 27));

        lab_nb_seance.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lab_nb_seance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lab_nb_seance.setText("0");
        lab_nb_seance.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel1.add(lab_nb_seance, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 261, 78, 27));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("ثمن الحصة الواحدة");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(686, 259, -1, 31));

        lab_prix_seance.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lab_prix_seance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lab_prix_seance.setText("0");
        lab_prix_seance.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel1.add(lab_prix_seance, new org.netbeans.lib.awtextra.AbsoluteConstraints(601, 261, 73, 27));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_paye", "التاريخ", "اليوم", "رقم الحصة", "المادة"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        tableScrollButton1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(tableScrollButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 160, 453, 209));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("عدد الحصص الغير مدفوعة");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(323, 375, -1, 25));

        lab_nbr_seance_no_payee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lab_nbr_seance_no_payee.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(lab_nbr_seance_no_payee, new org.netbeans.lib.awtextra.AbsoluteConstraints(232, 375, 85, 25));

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 320, -1, -1));

        rad_moin.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rad_moin.setText("دفع شهري");
        rad_moin.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel1.add(rad_moin, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 320, -1, -1));

        rad_seance.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rad_seance.setText("دفع بالحصة");
        rad_seance.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel1.add(rad_seance, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 320, -1, -1));

        getContentPane().add(jPanel1, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
////        //   if(isslastSeance){
////            int id_category = Integer.parseInt(lab_id_categ.getText());
////            int id_niv = Integer.parseInt(lab_id_niv.getText());
////            Matiere matiere = matiereDAOImpl.findMatiereByNiveau_Catego(combobox1.getSelectedItem().toString(), id_niv, id_category);
////            la_montant_matier.setText(matiere.getPrix() + "");
////
////            Etudiant etudiant = etudiantDAOImpl.getEtudiantByCodbar(jTextField2.getText());
////
////            JOptionPane.showMessageDialog(null, matiere.getId());
////            List<Seance> seances = sceanceDAOImpl.getSeanceOfMatiere(matiere.getId());
////            int nb_seance = seances.size();
////            JOptionPane.showMessageDialog(null, " seance " + matiere.getMatiereEtdAr() + "  =nbr : " + seances.size() + "  id : " + matiere.getId());
////            List<Seance_Matiere> seance_Matiere_false = seanceMatiereDAOImpl.getSeances_Noterminate(matiere.getId(), LocalDate.now());
////            List<Payement> payements=payementDAOImpl.getNOPayementOfMatier(etudiant.getId(), matiere.getId(),"No payee");
////
////            if( payements !=null){
////                if(payements.size()>=nb_seance){
////                    for(Payement payement : payements){
////                        payement.setTypePayement("payee");
////                        payement.setPrix(payement.getMatiere().getPrix()/nb_seance);
////                        payement.setPrixPaye(payement.getMatiere().getPrix());
////
////                    }
////                }else{
////
////                }
////
////            }else{
////
////                Payement last_payement = payementDAOImpl.getlasPayementEtudiantOfMatier(etudiant.getId(), matiere.getId());
////
////                Seance_Matiere last_seance_Matiere_payee =seanceMatiereDAOImpl.findById(last_payement.getId_seance_matiere());
////
////                if(last_seance_Matiere_payee== null || last_seance_Matiere_payee.isTermine()){
////                    if (seance_Matiere_false != null) {
////                        for (Seance_Matiere seance_Matiere1 : seance_Matiere_false) {
////                            double prix_seance = matiere.getPrix() / nb_seance;
////                            if (!seance_Matiere1.isTermine()) {
////                                JOptionPane.showMessageDialog(null, " false ");
////                                Payement payement1 = new Payement(0, etudiant, matiere, seance_Matiere1.getId(), seance_Matiere1.getSeance(), "", matiere.getPrix(), matiere.getPrix(), matiere.getPrix(), LocalDate.now());
////                                //   payementDAOImpl.save(payement1);
////                                seance_Matieres_payee.add(seance_Matiere1);
////                                payements.add(payement1);
////
////                            } else {
////
////                                if (seance_Matiere1.isTermine() && seance_Matiere1.getDate().isEqual(LocalDate.now())
////                                    && seance_Matiere1.getSeance().getFinTime().after(Time.valueOf(LocalTime.now()))) { // time
////                                    Payement payement1 = new Payement(0, etudiant, matiere, seance_Matiere1.getId(), seance_Matiere1.getSeance(), "", matiere.getPrix(), matiere.getPrix(), matiere.getPrix(), LocalDate.now());
////                                    // payementDAOImpl.save(payement1);
////                                    seance_Matieres_payee.add(seance_Matiere1);
////                                    payements.add(payement1);
////                                }
////                            }
////                        }
////                    }
////
////                    if(nb_seance ==payements.size()){
////                        //save
////                    }else{
////                        if(nb_seance> payements.size()){
////                            JOptionPane.showMessageDialog(null, "nb_seance> payements.size()  "+ nb_seance+"  > "  +payements.size());
////                            Seance_Matiere last_seance_matier = seanceMatiereDAOImpl.getlasSeanceOfMatier(matiere.getId());
////                            JOptionPane.showMessageDialog(null,"last_seance_matier  " + last_seance_matier.getId());
////                            LocalDate date = last_seance_matier.getDate();
////                            // add new seance matier ;
////                            for(Seance seance : seances){
////                                LocalDate  new_date = date.with(TemporalAdjusters.next(getDayOfWeekFromArabic(seance.getDay_sceance())));
////                                Seance_Matiere seance_Matiere = new Seance_Matiere(0, seance, matiere, false, new_date);
////                                seanceMatiereDAOImpl.save(seance_Matiere);
////                                JOptionPane.showMessageDialog(null,"save matier seance ");
////                            }
////
////                            // get id of seance matiere new to get 1 moin
////                            int nbr_seance_get_moin= payements.size();
////                            int id_seance= last_seance_matier.getId();
////                            double prix_seance = matiere.getPrix()/nb_seance;
////                            while(nbr_seance_get_moin !=nb_seance ){
////                                id_seance=id_seance+1; // select *from tab where id > lastseance;
////                                Seance_Matiere seance_Matiere_new =seanceMatiereDAOImpl.findById(id_seance);
////                                JOptionPane.showMessageDialog(null,"seance_Matiere_new"+seance_Matiere_new.getId()+ "  nb :"+id_seance );
////                                Payement payement = new Payement(0, etudiant, matiere, seance_Matiere_new.getId(), seance_Matiere_new.getSeance(), "cashe", prix_seance, matiere.getPrix(), matiere.getPrix(), LocalDate.now());
////                                payements.add(payement);
////                                seance_Matieres_payee.add(seance_Matiere_new);
////                                //payementDAOImpl.save(payement);
////
////                            }
////                        }
////                    }
////                    jLabel13.setText(matiere.getPrix()+"");
////                    String text="";
////                    for(Seance_Matiere seance_Matiere1 : seance_Matieres_payee){
////                        text = text + "\n  الحصة "+ " "+ seance_Matiere1.getSeance().getNumSeance() + " : " + seance_Matiere1.getSeance().getDay_sceance() + "  في   " +" "+  seance_Matiere1.getDate() +" .";
////                    }
////                    textArea1.setText(text);
////                }else{
////
////                    if(!last_seance_Matiere_payee.isTermine())
////                    JOptionPane.showMessageDialog(null, " لم يتم اكمال حصص الشهر الحالي \n اخر حصة مدفوعة في   : " + last_seance_Matiere_payee.getDate());
////                }
////            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void buttonRounder19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRounder19ActionPerformed
//
//        if (jCheckBoxCustomfr1.isSelected()) {
//            lab_nbr_seance_no_payee.setText("");
//            for (Payement payement : payements) {
//                payementDAOImpl.save(payement);
//            }
//            payements.clear();
//            seance_Matieres_payee.clear();
//        } else {
//            lab_nbr_seance_no_payee.setText("قم بتأكيد الدفع ...");
//        }

    }//GEN-LAST:event_buttonRounder19ActionPerformed

    private void buttonRounder17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRounder17ActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonRounder17ActionPerformed

    private void combobox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobox1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_combobox1ItemStateChanged

    private void combobox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox1ActionPerformed
        if (combobox1.getSelectedIndex() != -1) {
            int id_category = Integer.parseInt(lab_id_categ.getText());
            int id_niv = Integer.parseInt(lab_id_niv.getText());
            Matiere matiere = matiereDAOImpl.findMatiereByNiveau_Catego(combobox1.getSelectedItem().toString(), id_niv, id_category);
            List<Seance> seances = sceanceDAOImpl.getSeanceOfMatiere(matiere.getId());

            la_montant_matier.setText(matiere.getPrix() + "");
            lab_nb_seance.setText(seances.size() + "");
            double prix_seance = matiere.getPrix() / (4 * seances.size());
            lab_prix_seance.setText(prix_seance + "");
            getPayementOfMatiereNOPayee(matiere);
        } else {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
        }
    }//GEN-LAST:event_combobox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String codbare = jTextField2.getText();
        etudiant = etudiantDAOImpl.getEtudiantByCodbar(codbare);
        CategoreNiveau categoreNiveau = etudiant.getCtegore_niveau();
        NiveauEtude niveauEtude = etudiant.getNiveau();
        lab_nom.setText(etudiant.getNom());
        lab_prenom.setText(etudiant.getPrenom());
        lab_catego.setText(categoreNiveau.getCategore_niveau_ar());
        lab_id_categ.setText(categoreNiveau.getId() + "");
        lab_niveau.setText(niveauEtude.getNiveauInitialAr());
        lab_id_niv.setText(niveauEtude.getId() + "");

        combobox1.removeAllItems();
        List<Inscription> inscriptions = inscriptionDAOImpl.findByEtudiantId(etudiant.getId());
        for (Inscription inscription : inscriptions) {
            Matiere matiere = inscription.getMatiere();
            combobox1.addItem(matiere.getMatiereEtdAr());

        }
        //    combobox1.setSelectedIndex(-1);
        //     la_montant_matier.setText("");

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int id_category = Integer.parseInt(lab_id_categ.getText());
        int id_niv = Integer.parseInt(lab_id_niv.getText());
        Matiere matiere = matiereDAOImpl.findMatiereByNiveau_Catego(combobox1.getSelectedItem().toString(), id_niv, id_category);
        List<Seance> seances = sceanceDAOImpl.getSeanceOfMatiere(matiere.getId());
        int nb_seance = seances.size();
        int nb_seance_moin = seances.size()*4;
    // seance to day =>  day seance matiere
        List<Seance_Matiere> seance_Matiere_for_payee = seanceMatiereDAOImpl.getSeances_Noterminate(matiere.getId(), LocalDate.now());

        List<Payement> payements = payementDAOImpl.getPayement_NO_OfMatier(etudiant.getId(), matiere.getId(), "No payee");

        if (payements == null) {  // ليس له ديون
            JOptionPane.showMessageDialog(null, "Nouveau");
            if (rad_moin.isSelected()) {
                JOptionPane.showMessageDialog(null, "payement par moin . . .");
                if(seance_Matiere_for_payee.size()< nb_seance_moin){               //  عندك الحصص المضافةأقل  شهر ونضيف شهر جديد باه 
                 addNewSeanceMatier(matiere);
                 seance_Matiere_for_payee = seanceMatiereDAOImpl.getSeances_Noterminate(matiere.getId(), LocalDate.now());                 
                }
                
                
                
            }
            if (rad_seance.isSelected()) {
                JOptionPane.showMessageDialog(null, "payement par moin . . .");

            }
        } else {
            JOptionPane.showMessageDialog(null, " No payee exist ");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private material.design.buttonRounder buttonRounder17;
    private material.design.buttonRounder buttonRounder19;
    private material.design.Combobox combobox1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private material.design.JCheckBoxCustomfr jCheckBoxCustomfr1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel la_montant_matier;
    private javax.swing.JLabel lab_catego;
    private javax.swing.JLabel lab_id_categ;
    private javax.swing.JLabel lab_id_niv;
    private javax.swing.JLabel lab_nb_seance;
    private javax.swing.JLabel lab_nbr_seance_no_payee;
    private javax.swing.JLabel lab_niveau;
    private javax.swing.JLabel lab_nom;
    private javax.swing.JLabel lab_prenom;
    private javax.swing.JLabel lab_prix_seance;
    private javax.swing.JRadioButton rad_moin;
    private javax.swing.JRadioButton rad_seance;
    private ui.table.TableScrollButton tableScrollButton1;
    private material.design.TextArea textArea1;
    private material.design.TextAreaScroll textAreaScroll1;
    // End of variables declaration//GEN-END:variables
   public void getPayementOfMatiereNOPayee(Matiere matiere) {
        List<Payement> payements = payementDAOImpl.getPayement_NO_OfMatier(etudiant.getId(), matiere.getId(), "No payee");
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        for (Payement payement : payements) {
            model.addRow(new Object[]{payement.getId(), payement.getSeance().getDay_sceance(), payement.getSeance_matiere().getDate(), payement.getSeance().getNumSeance(),
                payement.getMatiere().getMatiereEtdAr()});
            lab_nbr_seance_no_payee.setText(jTable1.getRowCount() + "");
        }

    }

    public void setDesignTable(JTable tab, JScrollPane scrol) {
        TableCustom.apply(scrol, TableCustom.TableType.DEFAULT);
        tab.getTableHeader().setFont(new Font("", Font.BOLD, 15));
        tab.setFont(new Font("", Font.BOLD, 14));
        scrol.setVerticalScrollBar(new ScrollBar());
        scrol.getVerticalScrollBar().setBackground(Color.WHITE);
        scrol.getViewport().setBackground(Color.white);// make table without rouw white
        JPanel p = new JPanel();
        p.setBackground(Color.WHITE);
        scrol.setCorner(JScrollPane.UPPER_RIGHT_CORNER, p);
    }

    public void addNewSeanceMatier(Matiere matiere) {
        List<Seance> seances = sceanceDAOImpl.getSeanceOfMatiere(matiere.getId());
        Seance_Matiere last_seance_matier = seanceMatiereDAOImpl.getlasSeanceOfMatier(matiere.getId());
        LocalDate date = last_seance_matier.getDate();
        // add new seance matier ;

        for (int i = 0; i <= 4; i++) {   // ++ 1mons
            for (Seance seance : seances) {
                LocalDate new_date = date.with(TemporalAdjusters.next(getDayOfWeekFromArabic(seance.getDay_sceance())));
                //// while(new_date.isBefore(LocalDate.now())){// si 1 moin no etud
                ////new_date = new_date.with(TemporalAdjusters.next(getDayOfWeekFromArabic(seance.getDay_sceance())));            
                //// date=new_date;
                ////}

                Seance_Matiere seance_Matiere = new Seance_Matiere(0, seance, matiere, false, new_date);
                seanceMatiereDAOImpl.save(seance_Matiere);
                JOptionPane.showMessageDialog(null, "save matier seance ");
            }
        }

    }

    private static final Map<String, DayOfWeek> arabicDayToDayOfWeekMap = new HashMap<>();

    static {
        arabicDayToDayOfWeekMap.put("الأحد", DayOfWeek.SUNDAY);
        arabicDayToDayOfWeekMap.put("الاثنين", DayOfWeek.MONDAY);
        arabicDayToDayOfWeekMap.put("الثلاثاء", DayOfWeek.TUESDAY);
        arabicDayToDayOfWeekMap.put("الأربعاء", DayOfWeek.WEDNESDAY);
        arabicDayToDayOfWeekMap.put("الخميس", DayOfWeek.THURSDAY);
        arabicDayToDayOfWeekMap.put("الجمعة", DayOfWeek.FRIDAY);
        arabicDayToDayOfWeekMap.put("السبت", DayOfWeek.SATURDAY);
    }

    public static DayOfWeek getDayOfWeekFromArabic(String arabicDayName) {
        return arabicDayToDayOfWeekMap.get(arabicDayName);
    }

}
